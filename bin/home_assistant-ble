#!/usr/bin/env ruby

require 'home_assistant/ble'
require 'yaml'
require 'optparse'
require 'byebug'

# force stdout/stderr to flush immediately
# this will allow to follow logs when launched via systemd
# the performance penalty is neglected since this is not a real-time program
$stdout.sync = true
$stderr.sync = true

def shut_down
  @detector.clean_all_devices
  $stdout.puts 'Quitting...'
end

Signal.trap('INT') do
  $stdout.puts 'Received SIGINT.'
  shut_down
  exit
end

Signal.trap('TERM') do
  $stdout.puts 'Received SIGTERM.'
  shut_down
  exit
end

options = {}
config = {}

OptionParser.new do |opts|
  opts.banner = "Usage: example.rb [options]"

  opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('-c CONFIG_FILE', '--config CONFIG_FILE', 'Specify config file') do |config_file|
    options[:config_file] = config_file
  end

  opts.on('-f', 'Run in foreground') do |run_in_foreground|
    options[:run_in_foreground] = run_in_foreground
  end
end.parse!

if options[:config_file]
  config = YAML.load_file(options[:config_file])
else
  $stderr.puts 'No configuration file specified, will use all default values'
end

if not options[:run_in_foreground]
  Process.daemon(true)
else
  $stdout.puts "Continuing in foreground" if options[:verbose]
end

@detector = HomeAssistant::Ble::Detector.new(config)

begin
  @detector.run
rescue ScriptError
  # If no BLE interface is available clean up and exit
  $stdout.puts 'No Bluetooth interfaces available.'
  shut_down
end
